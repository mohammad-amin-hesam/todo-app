{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from \"react\";\nimport App from \"next/app\";\nimport { ThemeProvider, createGlobalStyle } from \"styled-components\";\nimport Router from \"next/router\";\nimport NProgress from \"nprogress\";\nimport Alert from \"react-s-alert\"; // Redux...\n\nimport { Provider } from \"react-redux\";\nimport withRedux from \"next-redux-wrapper\";\nimport { makeStore } from \"../redux/store\"; // CSS...\n\nimport reset from \"../public/styles/reset\";\nimport grid from \"../public/styles/grid\"; // Css Fonts\n\nimport \"../public/styles/IRANSans/Farsi_numerals/webFonts/css/style.css\";\nimport \"../public/styles/IRANSans/WebFonts/css/style.css\"; // Css LineAwesome\n\nimport \"../public/fonts/line/css/line-awesome.min.css\"; // Css FontIcon\n\nimport \"../public/fonts/fontello-97f03f85/css/mizkhabar.css\"; // Css carousel\n\nimport \"react-multi-carousel/lib/styles.css\"; // Css nprogress\n\nimport \"nprogress/nprogress.css\"; // s-alert\n\nimport \"react-s-alert/dist/s-alert-default.css\";\nimport \"react-s-alert/dist/s-alert-css-effects/jelly.css\";\nconst GlobalStyle = createGlobalStyle`\n  ${grid}\n  ${reset}\n`;\nconst theme = {\n  primary: \"green\"\n};\nRouter.events.on(\"routeChangeStart\", () => {\n  NProgress.start();\n});\nRouter.events.on(\"routeChangeComplete\", () => {\n  NProgress.done();\n});\nRouter.events.on(\"routeChangeError\", () => {\n  NProgress.done();\n});\n\nclass MyApp extends App {\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(_objectSpread({}, ctx));\n    }\n\n    return {\n      pageProps: _objectSpread({}, pageProps)\n    };\n  }\n\n  componentDidMount() {\n    const jssStyles = document.querySelector(\"#jss-server-side\");\n    if (jssStyles && jssStyles.parentNode) jssStyles.parentNode.removeChild(jssStyles);\n  }\n\n  componentDidCatch(error, errorInfo) {\n    super.componentDidCatch(error, errorInfo);\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      store\n    } = this.props;\n    return __jsx(React.Fragment, null, __jsx(Provider, {\n      store: store\n    }, __jsx(ThemeProvider, {\n      theme: theme\n    }, __jsx(Component, pageProps), __jsx(Alert, {\n      stack: {\n        limit: 3\n      }\n    }), __jsx(GlobalStyle, null))));\n  }\n\n}\n\nexport default withRedux(makeStore, {\n  debug: true\n})(MyApp);","map":null,"metadata":{},"sourceType":"module"}