{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/amin/Templates/todo-sample/components/Input.tsx\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { danger } from \"../helpers/colors\";\n\nvar Input = function Input(props) {\n  var onBlur = props.onBlur,\n      onChange = props.onChange,\n      value = props.value,\n      err = props.err,\n      hasErr = props.hasErr,\n      id = props.id,\n      label = props.label,\n      name = props.name;\n  console.log(hasErr);\n  return __jsx(TaskInput, {\n    hasErr: hasErr,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, __jsx(\"label\", {\n    htmlFor: id,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, hasErr ? err : label), __jsx(\"input\", {\n    type: \"text\",\n    id: id,\n    name: name,\n    onChange: onChange,\n    onBlur: onBlur,\n    value: value,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar TaskInput = styled.div(function (props) {\n  var hasErr = props.hasErr;\n  return {\n    marginBottom: 15,\n    label: {\n      width: \"100%\",\n      fontSize: \".85rem\",\n      color: hasErr ? danger : \"#555\"\n    },\n    input: {\n      width: \"100%\",\n      height: 40,\n      borderRadius: 4,\n      border: \"1px solid \".concat(hasErr ? danger : \"#99999944\"),\n      color: \"#444\",\n      fontSize: \".9rem\",\n      padding: \"0 15px\"\n    }\n  };\n});\nexport default Input;","map":{"version":3,"sources":["/home/amin/Templates/todo-sample/components/Input.tsx"],"names":["React","styled","danger","Input","props","onBlur","onChange","value","err","hasErr","id","label","name","console","log","TaskInput","div","marginBottom","width","fontSize","color","input","height","borderRadius","border","padding"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,MAAT,QAAuB,mBAAvB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AAAA,MACfC,MADe,GAC2CD,KAD3C,CACfC,MADe;AAAA,MACPC,QADO,GAC2CF,KAD3C,CACPE,QADO;AAAA,MACGC,KADH,GAC2CH,KAD3C,CACGG,KADH;AAAA,MACUC,GADV,GAC2CJ,KAD3C,CACUI,GADV;AAAA,MACeC,MADf,GAC2CL,KAD3C,CACeK,MADf;AAAA,MACuBC,EADvB,GAC2CN,KAD3C,CACuBM,EADvB;AAAA,MAC2BC,KAD3B,GAC2CP,KAD3C,CAC2BO,KAD3B;AAAA,MACkCC,IADlC,GAC2CR,KAD3C,CACkCQ,IADlC;AAGvBC,EAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACA,SACE,MAAC,SAAD;AAAW,IAAA,MAAM,EAAEA,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAEC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBD,MAAM,GAAGD,GAAH,GAASG,KAApC,CADF,EAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,EAAE,EAAED,EAFN;AAGE,IAAA,IAAI,EAAEE,IAHR;AAIE,IAAA,QAAQ,EAAEN,QAJZ;AAKE,IAAA,MAAM,EAAED,MALV;AAME,IAAA,KAAK,EAAEE,KANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAaD,CAjBD;;AAmBA,IAAMQ,SAAS,GAAGd,MAAM,CAACe,GAAP,CAAW,UAACZ,KAAD,EAAW;AAAA,MAC9BK,MAD8B,GACnBL,KADmB,CAC9BK,MAD8B;AAGtC,SAAO;AACLQ,IAAAA,YAAY,EAAE,EADT;AAELN,IAAAA,KAAK,EAAE;AACLO,MAAAA,KAAK,EAAE,MADF;AAELC,MAAAA,QAAQ,EAAE,QAFL;AAGLC,MAAAA,KAAK,EAAEX,MAAM,GAAGP,MAAH,GAAY;AAHpB,KAFF;AAOLmB,IAAAA,KAAK,EAAE;AACLH,MAAAA,KAAK,EAAE,MADF;AAELI,MAAAA,MAAM,EAAE,EAFH;AAGLC,MAAAA,YAAY,EAAE,CAHT;AAILC,MAAAA,MAAM,sBAAef,MAAM,GAAGP,MAAH,GAAY,WAAjC,CAJD;AAKLkB,MAAAA,KAAK,EAAE,MALF;AAMLD,MAAAA,QAAQ,EAAE,OANL;AAOLM,MAAAA,OAAO,EAAE;AAPJ;AAPF,GAAP;AAiBD,CApBiB,CAAlB;AAsBA,eAAetB,KAAf","sourcesContent":["import React from \"react\";\n\nimport styled from \"styled-components\";\nimport { danger } from \"../helpers/colors\";\n\nconst Input = (props) => {\n  const { onBlur, onChange, value, err, hasErr, id, label, name } = props;\n\n  console.log(hasErr);\n  return (\n    <TaskInput hasErr={hasErr}>\n      <label htmlFor={id}>{hasErr ? err : label}</label>\n      <input\n        type=\"text\"\n        id={id}\n        name={name}\n        onChange={onChange}\n        onBlur={onBlur}\n        value={value}\n      />\n    </TaskInput>\n  );\n};\n\nconst TaskInput = styled.div((props) => {\n  const { hasErr } = props;\n\n  return {\n    marginBottom: 15,\n    label: {\n      width: \"100%\",\n      fontSize: \".85rem\",\n      color: hasErr ? danger : \"#555\",\n    },\n    input: {\n      width: \"100%\",\n      height: 40,\n      borderRadius: 4,\n      border: `1px solid ${hasErr ? danger : \"#99999944\"}`,\n      color: \"#444\",\n      fontSize: \".9rem\",\n      padding: \"0 15px\",\n    },\n  };\n});\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}