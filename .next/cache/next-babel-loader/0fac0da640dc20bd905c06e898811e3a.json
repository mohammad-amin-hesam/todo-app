{"ast":null,"code":"var _jsxFileName = \"/home/amin/Templates/todo-sample/pages/tasks/[id].tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Head from \"next/head\";\nimport MainBox from \"../../components/MainBox\";\nimport TaskForm from \"../../components/TaskForm\";\nimport Router from \"next/router\";\nimport { fetchTask } from \"../../redux/actions/fetchTasks\";\nimport { editTask } from \"../../redux/actions/editTask\";\n\nconst EditTask = ({\n  id\n}) => {\n  const dispatch = useDispatch();\n  const {\n    task\n  } = useSelector(state => state);\n\n  const handleSubmit = data => {\n    dispatch(editTask(id, data));\n    Router.push(\"/\");\n  };\n\n  useEffect(() => {\n    dispatch(fetchTask(id));\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, \"Edit Task |\\u200C Todo App\")), __jsx(MainBox, {\n    title: \"Edit Task\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, __jsx(TaskForm, {\n    onSubmit: handleSubmit,\n    title: task.title,\n    description: task.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  })));\n};\n\nEditTask.getInitialProps = async ctx => {\n  const {\n    query\n  } = ctx;\n  const {\n    id\n  } = query;\n  return {\n    id\n  };\n};\n\nexport default EditTask;","map":{"version":3,"sources":["/home/amin/Templates/todo-sample/pages/tasks/[id].tsx"],"names":["React","useEffect","useDispatch","useSelector","Head","MainBox","TaskForm","Router","fetchTask","editTask","EditTask","id","dispatch","task","state","handleSubmit","data","push","title","description","getInitialProps","ctx","query"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,SAAT,QAA0B,gCAA1B;AACA,SAASC,QAAT,QAAyB,8BAAzB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAY;AAC3B,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAWV,WAAW,CAAEW,KAAD,IAAWA,KAAZ,CAA5B;;AAEA,QAAMC,YAAY,GAAIC,IAAD,IAAU;AAC7BJ,IAAAA,QAAQ,CAACH,QAAQ,CAACE,EAAD,EAAKK,IAAL,CAAT,CAAR;AACAT,IAAAA,MAAM,CAACU,IAAP,CAAY,GAAZ;AACD,GAHD;;AAKAhB,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,QAAQ,CAACJ,SAAS,CAACG,EAAD,CAAV,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE,4BACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,CADF,EAIE,MAAC,OAAD;AAAS,IAAA,KAAK,EAAE,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AACE,IAAA,QAAQ,EAAEI,YADZ;AAEE,IAAA,KAAK,EAAEF,IAAI,CAACK,KAFd;AAGE,IAAA,WAAW,EAAEL,IAAI,CAACM,WAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CADF;AAcD,CA3BD;;AA6BAT,QAAQ,CAACU,eAAT,GAA2B,MAAOC,GAAP,IAAe;AACxC,QAAM;AAAEC,IAAAA;AAAF,MAAYD,GAAlB;AACA,QAAM;AAAEV,IAAAA;AAAF,MAASW,KAAf;AACA,SAAO;AAAEX,IAAAA;AAAF,GAAP;AACD,CAJD;;AAMA,eAAeD,QAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Head from \"next/head\";\nimport MainBox from \"../../components/MainBox\";\nimport TaskForm from \"../../components/TaskForm\";\nimport Router from \"next/router\";\nimport { fetchTask } from \"../../redux/actions/fetchTasks\";\nimport { editTask } from \"../../redux/actions/editTask\";\n\nconst EditTask = ({ id }) => {\n  const dispatch = useDispatch();\n  const { task } = useSelector((state) => state);\n\n  const handleSubmit = (data) => {\n    dispatch(editTask(id, data));\n    Router.push(\"/\");\n  };\n\n  useEffect(() => {\n    dispatch(fetchTask(id));\n  }, []);\n\n  return (\n    <>\n      <Head>\n        <title>Edit Task |â€Œ Todo App</title>\n      </Head>\n      <MainBox title={\"Edit Task\"}>\n        <TaskForm\n          onSubmit={handleSubmit}\n          title={task.title}\n          description={task.description}\n        />\n      </MainBox>\n    </>\n  );\n};\n\nEditTask.getInitialProps = async (ctx) => {\n  const { query } = ctx;\n  const { id } = query;\n  return { id };\n};\n\nexport default EditTask;\n"]},"metadata":{},"sourceType":"module"}