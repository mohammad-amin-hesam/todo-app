{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { SET_DATA } from \"../types\";\nvar initialList = {\n  list: [],\n  type: \"all\"\n};\nexport var todoList = function todoList() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialList;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_DATA:\n      return _objectSpread({}, state, {\n        list: _toConsumableArray(action.data)\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/amin/Templates/todo-sample/redux/reducer/todoListReducer.tsx"],"names":["SET_DATA","initialList","list","type","todoList","state","action","data"],"mappings":";;;;;;;AACA,SAASA,QAAT,QAAyB,UAAzB;AAEA,IAAMC,WAAW,GAAG;AAClBC,EAAAA,IAAI,EAAE,EADY;AAElBC,EAAAA,IAAI,EAAE;AAFY,CAApB;AAKA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAA4C;AAAA,MAA3CC,KAA2C,uEAAnCJ,WAAmC;AAAA,MAAtBK,MAAsB;;AAClE,UAAQA,MAAM,CAACH,IAAf;AACE,SAAKH,QAAL;AACE,+BAAYK,KAAZ;AAAmBH,QAAAA,IAAI,qBAAMI,MAAM,CAACC,IAAb;AAAvB;;AAEF;AACE,aAAOF,KAAP;AALJ;AAOD,CARM","sourcesContent":["import { AnyAction } from \"redux\";\nimport { SET_DATA } from \"../types\";\n\nconst initialList = {\n  list: [],\n  type: \"all\",\n};\n\nexport const todoList = (state = initialList, action: AnyAction) => {\n  switch (action.type) {\n    case SET_DATA:\n      return { ...state, list: [...action.data] };\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}