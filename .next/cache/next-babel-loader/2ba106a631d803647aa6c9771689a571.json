{"ast":null,"code":"import { createStore, applyMiddleware, compose } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport reducer from \"./reducer\";\nimport thunk from \"redux-thunk\";\nimport Api from \"../api\";\nvar persistConfig = {\n  key: \"root\",\n  storage: storage\n};\nvar persistedReducer = persistReducer(persistConfig, reducer);\nexport var makeStore = function makeStore(initialState) {\n  var composeEnhancers = true && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  var store = createStore(persistedReducer, initialState, composeEnhancers(applyMiddleware(thunk.withExtraArgument({\n    Api: Api\n  }))));\n\n  if (module.hot) {\n    module.hot.accept(\"./reducer\", function () {\n      console.log(\"Replacing reducer\");\n      store.replaceReducer(require(\"./reducer\")[\"default\"]);\n    });\n  }\n\n  var persistor = persistStore(store);\n  return {\n    store: store,\n    persistor: persistor\n  };\n};","map":{"version":3,"sources":["/home/amin/Templates/todo-sample/redux/store.tsx"],"names":["createStore","applyMiddleware","compose","persistStore","persistReducer","storage","reducer","thunk","Api","persistConfig","key","persistedReducer","makeStore","initialState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","withExtraArgument","module","hot","accept","console","log","replaceReducer","require","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,GAAP,MAAgB,QAAhB;AAEA,IAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBL,EAAAA,OAAO,EAAPA;AAFoB,CAAtB;AAKA,IAAMM,gBAAgB,GAAGP,cAAc,CAACK,aAAD,EAAgBH,OAAhB,CAAvC;AAEA,OAAO,IAAMM,SAAS,GAAG,SAAZA,SAAY,CAACC,YAAD,EAAkB;AACzC,MAAMC,gBAAgB,GACnB,QACEC,MAAD,CAAgBC,oCADlB,IAEAd,OAHF;AAKA,MAAMe,KAAK,GAAGjB,WAAW,CACvBW,gBADuB,EAEvBE,YAFuB,EAGvBC,gBAAgB,CAACb,eAAe,CAACM,KAAK,CAACW,iBAAN,CAAwB;AAAEV,IAAAA,GAAG,EAAHA;AAAF,GAAxB,CAAD,CAAhB,CAHO,CAAzB;;AAMA,MAAKW,MAAD,CAAgBC,GAApB,EAAyB;AACtBD,IAAAA,MAAD,CAAgBC,GAAhB,CAAoBC,MAApB,CAA2B,WAA3B,EAAwC,YAAM;AAC5CC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAN,MAAAA,KAAK,CAACO,cAAN,CAAqBC,OAAO,CAAC,WAAD,CAAP,WAArB;AACD,KAHD;AAID;;AAED,MAAIC,SAAS,GAAGvB,YAAY,CAACc,KAAD,CAA5B;AAEA,SAAO;AAAEA,IAAAA,KAAK,EAALA,KAAF;AAASS,IAAAA,SAAS,EAATA;AAAT,GAAP;AACD,CAtBM","sourcesContent":["import { createStore, applyMiddleware, compose } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport reducer from \"./reducer\";\nimport thunk from \"redux-thunk\";\nimport Api from \"../api\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, reducer);\n\nexport const makeStore = (initialState) => {\n  const composeEnhancers =\n    (typeof window !== \"undefined\" &&\n      (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n    compose;\n\n  const store = createStore(\n    persistedReducer,\n    initialState,\n    composeEnhancers(applyMiddleware(thunk.withExtraArgument({ Api })))\n  );\n\n  if ((module as any).hot) {\n    (module as any).hot.accept(\"./reducer\", () => {\n      console.log(\"Replacing reducer\");\n      store.replaceReducer(require(\"./reducer\").default);\n    });\n  }\n\n  let persistor = persistStore(store);\n\n  return { store, persistor };\n};\n"]},"metadata":{},"sourceType":"module"}