{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { SET_DATA, FETCH_TASK } from \"../redux/types\";\nimport { uniq_id } from \"../helpers/props\";\nexport default class api {\n  constructor(obj) {\n    _defineProperty(this, \"getState\", void 0);\n\n    _defineProperty(this, \"dispatch\", void 0);\n\n    _defineProperty(this, \"db\", void 0);\n\n    _defineProperty(this, \"Setter\", data => {\n      localStorage.setItem(\"todo-list\", JSON.stringify(data));\n      this.dispatch({\n        type: SET_DATA,\n        data\n      });\n    });\n\n    _defineProperty(this, \"GetAll\", () => this.dispatch({\n      type: SET_DATA,\n      data: this.db,\n      hasItem: this.db.length > 0\n    }));\n\n    _defineProperty(this, \"Get\", id => {\n      this.dispatch({\n        type: FETCH_TASK,\n        item: this.db.filter(item => item.id === id)[0]\n      });\n      this.Put(id, {\n        read: true\n      });\n    });\n\n    _defineProperty(this, \"Put\", (id, data) => {\n      let mirrorDb = [...this.db];\n      const item = mirrorDb.filter(task => task.id === id)[0];\n      if (!item) return;\n      const indexOfItem = mirrorDb.indexOf(item);\n      mirrorDb[indexOfItem] = _objectSpread({}, item, {}, data);\n      this.Setter(mirrorDb);\n    });\n\n    _defineProperty(this, \"Post\", data => this.Setter([...this.db, _objectSpread({}, data, {\n      read: false,\n      id: uniq_id()\n    })]));\n\n    _defineProperty(this, \"Delete\", id => this.Setter(this.db.filter(item => item.id !== id)));\n\n    const _data = localStorage.getItem(\"todo-list\");\n\n    this.getState = obj.getState;\n    this.dispatch = obj.dispatch;\n    this.db = _data ? JSON.parse(_data) : [];\n  }\n\n}","map":{"version":3,"sources":["/home/amin/Templates/todo-sample/api/index.tsx"],"names":["SET_DATA","FETCH_TASK","uniq_id","api","constructor","obj","data","localStorage","setItem","JSON","stringify","dispatch","type","db","hasItem","length","id","item","filter","Put","read","mirrorDb","task","indexOfItem","indexOf","Setter","getItem","getState","parse"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,gBAArC;AACA,SAASC,OAAT,QAAwB,kBAAxB;AAEA,eAAe,MAAMC,GAAN,CAAU;AAKvBC,EAAAA,WAAW,CAACC,GAAD,EAAM;AAAA;;AAAA;;AAAA;;AAAA,oCAOPC,IAAD,IAAU;AACjBC,MAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAlC;AACA,WAAKK,QAAL,CAAc;AAAEC,QAAAA,IAAI,EAAEZ,QAAR;AAAkBM,QAAAA;AAAlB,OAAd;AACD,KAVgB;;AAAA,oCAYR,MACP,KAAKK,QAAL,CAAc;AACZC,MAAAA,IAAI,EAAEZ,QADM;AAEZM,MAAAA,IAAI,EAAE,KAAKO,EAFC;AAGZC,MAAAA,OAAO,EAAE,KAAKD,EAAL,CAAQE,MAAR,GAAiB;AAHd,KAAd,CAbe;;AAAA,iCAmBVC,EAAD,IAAQ;AACZ,WAAKL,QAAL,CAAc;AACZC,QAAAA,IAAI,EAAEX,UADM;AAEZgB,QAAAA,IAAI,EAAE,KAAKJ,EAAL,CAAQK,MAAR,CAAgBD,IAAD,IAAeA,IAAI,CAACD,EAAL,KAAYA,EAA1C,EAA8C,CAA9C;AAFM,OAAd;AAIA,WAAKG,GAAL,CAASH,EAAT,EAAa;AAAEI,QAAAA,IAAI,EAAE;AAAR,OAAb;AACD,KAzBgB;;AAAA,iCA2BX,CAACJ,EAAD,EAAKV,IAAL,KAAc;AAClB,UAAIe,QAAa,GAAG,CAAC,GAAG,KAAKR,EAAT,CAApB;AACA,YAAMI,IAAI,GAAGI,QAAQ,CAACH,MAAT,CAAiBI,IAAD,IAAeA,IAAI,CAACN,EAAL,KAAYA,EAA3C,EAA+C,CAA/C,CAAb;AACA,UAAI,CAACC,IAAL,EAAW;AACX,YAAMM,WAAW,GAAGF,QAAQ,CAACG,OAAT,CAAiBP,IAAjB,CAApB;AACAI,MAAAA,QAAQ,CAACE,WAAD,CAAR,qBAA6BN,IAA7B,MAAsCX,IAAtC;AACA,WAAKmB,MAAL,CAAYJ,QAAZ;AACD,KAlCgB;;AAAA,kCAoCTf,IAAD,IACL,KAAKmB,MAAL,CAAY,CAAC,GAAG,KAAKZ,EAAT,oBAAkBP,IAAlB;AAAwBc,MAAAA,IAAI,EAAE,KAA9B;AAAqCJ,MAAAA,EAAE,EAAEd,OAAO;AAAhD,OAAZ,CArCe;;AAAA,oCAuCPc,EAAD,IAAQ,KAAKS,MAAL,CAAY,KAAKZ,EAAL,CAAQK,MAAR,CAAgBD,IAAD,IAAeA,IAAI,CAACD,EAAL,KAAYA,EAA1C,CAAZ,CAvCA;;AACf,UAAMV,KAAI,GAAGC,YAAY,CAACmB,OAAb,CAAqB,WAArB,CAAb;;AACA,SAAKC,QAAL,GAAgBtB,GAAG,CAACsB,QAApB;AACA,SAAKhB,QAAL,GAAgBN,GAAG,CAACM,QAApB;AACA,SAAKE,EAAL,GAAUP,KAAI,GAAGG,IAAI,CAACmB,KAAL,CAAWtB,KAAX,CAAH,GAAsB,EAApC;AACD;;AAVsB","sourcesContent":["import { SET_DATA, FETCH_TASK } from \"../redux/types\";\nimport { uniq_id } from \"../helpers/props\";\n\nexport default class api {\n  getState: () => any;\n  dispatch: (obj: {}) => any;\n  db: [];\n\n  constructor(obj) {\n    const data = localStorage.getItem(\"todo-list\");\n    this.getState = obj.getState;\n    this.dispatch = obj.dispatch;\n    this.db = data ? JSON.parse(data) : [];\n  }\n\n  Setter = (data) => {\n    localStorage.setItem(\"todo-list\", JSON.stringify(data));\n    this.dispatch({ type: SET_DATA, data });\n  };\n\n  GetAll = () =>\n    this.dispatch({\n      type: SET_DATA,\n      data: this.db,\n      hasItem: this.db.length > 0,\n    });\n\n  Get = (id) => {\n    this.dispatch({\n      type: FETCH_TASK,\n      item: this.db.filter((item: any) => item.id === id)[0],\n    });\n    this.Put(id, { read: true });\n  };\n\n  Put = (id, data) => {\n    let mirrorDb: any = [...this.db];\n    const item = mirrorDb.filter((task: any) => task.id === id)[0];\n    if (!item) return;\n    const indexOfItem = mirrorDb.indexOf(item);\n    mirrorDb[indexOfItem] = { ...item, ...data };\n    this.Setter(mirrorDb);\n  };\n\n  Post = (data) =>\n    this.Setter([...this.db, { ...data, read: false, id: uniq_id() }]);\n\n  Delete = (id) => this.Setter(this.db.filter((item: any) => item.id !== id));\n}\n"]},"metadata":{},"sourceType":"module"}