{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { SET_DATA } from \"../redux/types\";\nexport default class api {\n  constructor(obj) {\n    _defineProperty(this, \"getState\", void 0);\n\n    _defineProperty(this, \"dispatch\", void 0);\n\n    _defineProperty(this, \"db\", void 0);\n\n    _defineProperty(this, \"Setter\", data => {\n      localStorage.setItem(\"todo-list\", JSON.stringify(data));\n      this.dispatch({\n        type: SET_DATA,\n        data\n      });\n    });\n\n    _defineProperty(this, \"Post\", data => this.Setter([...this.db, _objectSpread({}, data, {\n      read: false\n    })]));\n\n    const _data = localStorage.getItem(\"todo-list\");\n\n    this.getState = obj.getState;\n    this.dispatch = obj.dispatch;\n    this.db = _data ? JSON.parse(_data) : [];\n  }\n\n  Get() {}\n\n  Put(data) {}\n\n  Delete() {}\n\n}","map":{"version":3,"sources":["/home/amin/Templates/todo-sample/api/index.tsx"],"names":["SET_DATA","api","constructor","obj","data","localStorage","setItem","JSON","stringify","dispatch","type","Setter","db","read","getItem","getState","parse","Get","Put","Delete"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AAEA,eAAe,MAAMC,GAAN,CAAU;AAKvBC,EAAAA,WAAW,CAACC,GAAD,EAAM;AAAA;;AAAA;;AAAA;;AAAA,oCAOPC,IAAD,IAAU;AACjBC,MAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAlC;AACA,WAAKK,QAAL,CAAc;AAAEC,QAAAA,IAAI,EAAEV,QAAR;AAAkBI,QAAAA;AAAlB,OAAd;AACD,KAVgB;;AAAA,kCAgBTA,IAAD,IAAU,KAAKO,MAAL,CAAY,CAAC,GAAG,KAAKC,EAAT,oBAAkBR,IAAlB;AAAwBS,MAAAA,IAAI,EAAE;AAA9B,OAAZ,CAhBA;;AACf,UAAMT,KAAI,GAAGC,YAAY,CAACS,OAAb,CAAqB,WAArB,CAAb;;AACA,SAAKC,QAAL,GAAgBZ,GAAG,CAACY,QAApB;AACA,SAAKN,QAAL,GAAgBN,GAAG,CAACM,QAApB;AACA,SAAKG,EAAL,GAAUR,KAAI,GAAGG,IAAI,CAACS,KAAL,CAAWZ,KAAX,CAAH,GAAsB,EAApC;AACD;;AAODa,EAAAA,GAAG,GAAG,CAAE;;AAERC,EAAAA,GAAG,CAACd,IAAD,EAAO,CAAE;;AAIZe,EAAAA,MAAM,GAAG,CAAE;;AAvBY","sourcesContent":["import { SET_DATA } from \"../redux/types\";\n\nexport default class api {\n  getState: () => any;\n  dispatch: (obj: {}) => any;\n  db: [];\n\n  constructor(obj) {\n    const data = localStorage.getItem(\"todo-list\");\n    this.getState = obj.getState;\n    this.dispatch = obj.dispatch;\n    this.db = data ? JSON.parse(data) : [];\n  }\n\n  Setter = (data) => {\n    localStorage.setItem(\"todo-list\", JSON.stringify(data));\n    this.dispatch({ type: SET_DATA, data });\n  };\n\n  Get() {}\n\n  Put(data) {}\n\n  Post = (data) => this.Setter([...this.db, { ...data, read: false }]);\n\n  Delete() {}\n}\n"]},"metadata":{},"sourceType":"module"}