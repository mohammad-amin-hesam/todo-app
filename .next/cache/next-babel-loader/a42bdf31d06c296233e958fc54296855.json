{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/amin/Templates/todo-sample/components/TaskForm.tsx\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport Input from \"./Input\";\nvar validateObj = Yup.object().shape({\n  title: Yup.string().min(3, \"حداقل ۳ کاراکتر وارد کنید\").max(50, \"بیشتر از ۵۰ کاراکتر مجاز نیست\").required(\"عنوان تسک را وارد کنید\"),\n  description: Yup.string().min(10, \"حداقل ۱۰ کاراکتر وارد کنید\").max(200, \"بیشتر از ۲۰۰ کاراکتر مجاز نیست\").required(\"توضیحات تسک را وارد کنید\")\n});\nvar initialValues = {\n  title: \"\",\n  description: \"\"\n};\n\nvar TaskForm = function TaskForm(props) {\n  var handleSubmit = props.handleSubmit,\n      renderOptions = props.renderOptions;\n  return __jsx(Formik, {\n    initialValues: initialValues,\n    onSubmit: handleSubmit,\n    validationSchema: validateObj,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, function (formProps) {\n    var values = formProps.values,\n        errors = formProps.errors,\n        touched = formProps.touched,\n        handleChange = formProps.handleChange,\n        handleBlur = formProps.handleBlur;\n    var titleErr = errors.title && touched.title;\n    var descriptionErr = errors.description && touched.description;\n    return __jsx(\"form\", {\n      onSubmit: handleSubmit,\n      autoComplete: \"off\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }, renderOptions && renderOptions(), __jsx(Input, {\n      label: \"Title\",\n      onChange: handleChange,\n      handleBlur: handleBlur,\n      value: values.title,\n      err: errors.title,\n      hasErr: titleErr,\n      id: \"addTaskInputTitle\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }), __jsx(Input, {\n      label: \"Description\",\n      onChange: handleChange,\n      handleBlur: handleBlur,\n      value: values.description,\n      err: errors.description,\n      hasErr: descriptionErr,\n      id: \"addTaskInputDescription\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }));\n  });\n};\n\nexport default TaskForm;","map":{"version":3,"sources":["/home/amin/Templates/todo-sample/components/TaskForm.tsx"],"names":["React","Formik","Yup","Input","validateObj","object","shape","title","string","min","max","required","description","initialValues","TaskForm","props","handleSubmit","renderOptions","formProps","values","errors","touched","handleChange","handleBlur","titleErr","descriptionErr"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,IAAMC,WAAW,GAAGF,GAAG,CAACG,MAAJ,GAAaC,KAAb,CAAmB;AACrCC,EAAAA,KAAK,EAAEL,GAAG,CAACM,MAAJ,GACJC,GADI,CACA,CADA,EACG,2BADH,EAEJC,GAFI,CAEA,EAFA,EAEI,+BAFJ,EAGJC,QAHI,CAGK,wBAHL,CAD8B;AAKrCC,EAAAA,WAAW,EAAEV,GAAG,CAACM,MAAJ,GACVC,GADU,CACN,EADM,EACF,4BADE,EAEVC,GAFU,CAEN,GAFM,EAED,gCAFC,EAGVC,QAHU,CAGD,0BAHC;AALwB,CAAnB,CAApB;AAWA,IAAME,aAAa,GAAG;AACpBN,EAAAA,KAAK,EAAE,EADa;AAEpBK,EAAAA,WAAW,EAAE;AAFO,CAAtB;;AAKA,IAAME,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAAA,MAClBC,YADkB,GACcD,KADd,CAClBC,YADkB;AAAA,MACJC,aADI,GACcF,KADd,CACJE,aADI;AAG1B,SACE,MAAC,MAAD;AACE,IAAA,aAAa,EAAEJ,aADjB;AAEE,IAAA,QAAQ,EAAEG,YAFZ;AAGE,IAAA,gBAAgB,EAAEZ,WAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKG,UAACc,SAAD,EAAe;AAAA,QACNC,MADM,GACgDD,SADhD,CACNC,MADM;AAAA,QACEC,MADF,GACgDF,SADhD,CACEE,MADF;AAAA,QACUC,OADV,GACgDH,SADhD,CACUG,OADV;AAAA,QACmBC,YADnB,GACgDJ,SADhD,CACmBI,YADnB;AAAA,QACiCC,UADjC,GACgDL,SADhD,CACiCK,UADjC;AAGd,QAAMC,QAAQ,GAAGJ,MAAM,CAACb,KAAP,IAAgBc,OAAO,CAACd,KAAzC;AACA,QAAMkB,cAAc,GAAGL,MAAM,CAACR,WAAP,IAAsBS,OAAO,CAACT,WAArD;AAEA,WACE;AAAM,MAAA,QAAQ,EAAEI,YAAhB;AAA8B,MAAA,YAAY,EAAC,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,aAAa,IAAIA,aAAa,EADjC,EAEE,MAAC,KAAD;AACE,MAAA,KAAK,EAAE,OADT;AAEE,MAAA,QAAQ,EAAEK,YAFZ;AAGE,MAAA,UAAU,EAAEC,UAHd;AAIE,MAAA,KAAK,EAAEJ,MAAM,CAACZ,KAJhB;AAKE,MAAA,GAAG,EAAEa,MAAM,CAACb,KALd;AAME,MAAA,MAAM,EAAEiB,QANV;AAOE,MAAA,EAAE,EAAE,mBAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAWE,MAAC,KAAD;AACE,MAAA,KAAK,EAAE,aADT;AAEE,MAAA,QAAQ,EAAEF,YAFZ;AAGE,MAAA,UAAU,EAAEC,UAHd;AAIE,MAAA,KAAK,EAAEJ,MAAM,CAACP,WAJhB;AAKE,MAAA,GAAG,EAAEQ,MAAM,CAACR,WALd;AAME,MAAA,MAAM,EAAEa,cANV;AAOE,MAAA,EAAE,EAAE,yBAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,CADF;AAuBD,GAlCH,CADF;AAsCD,CAzCD;;AA2CA,eAAeX,QAAf","sourcesContent":["import React from \"react\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport Input from \"./Input\";\n\nconst validateObj = Yup.object().shape({\n  title: Yup.string()\n    .min(3, \"حداقل ۳ کاراکتر وارد کنید\")\n    .max(50, \"بیشتر از ۵۰ کاراکتر مجاز نیست\")\n    .required(\"عنوان تسک را وارد کنید\"),\n  description: Yup.string()\n    .min(10, \"حداقل ۱۰ کاراکتر وارد کنید\")\n    .max(200, \"بیشتر از ۲۰۰ کاراکتر مجاز نیست\")\n    .required(\"توضیحات تسک را وارد کنید\"),\n});\n\nconst initialValues = {\n  title: \"\",\n  description: \"\",\n};\n\nconst TaskForm = (props) => {\n  const { handleSubmit, renderOptions } = props;\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      validationSchema={validateObj}\n    >\n      {(formProps) => {\n        const { values, errors, touched, handleChange, handleBlur } = formProps;\n\n        const titleErr = errors.title && touched.title;\n        const descriptionErr = errors.description && touched.description;\n\n        return (\n          <form onSubmit={handleSubmit} autoComplete=\"off\">\n            {renderOptions && renderOptions()}\n            <Input\n              label={\"Title\"}\n              onChange={handleChange}\n              handleBlur={handleBlur}\n              value={values.title}\n              err={errors.title}\n              hasErr={titleErr}\n              id={\"addTaskInputTitle\"}\n            />\n            <Input\n              label={\"Description\"}\n              onChange={handleChange}\n              handleBlur={handleBlur}\n              value={values.description}\n              err={errors.description}\n              hasErr={descriptionErr}\n              id={\"addTaskInputDescription\"}\n            />\n          </form>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default TaskForm;\n"]},"metadata":{},"sourceType":"module"}