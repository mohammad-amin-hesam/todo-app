{"ast":null,"code":"import { createStore, applyMiddleware, compose } from \"redux\";\nimport reducer from \"./reducer\";\nimport thunk from \"redux-thunk\";\nimport Api from \"../api\";\nexport const makeStore = initialState => {\n  const composeEnhancers = false && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  const store = createStore(reducer, initialState, composeEnhancers(applyMiddleware(thunk.withExtraArgument({\n    Api\n  }))));\n\n  if (module.hot) {\n    module.hot.accept(\"./reducer\", () => {\n      console.log(\"Replacing reducer\");\n      store.replaceReducer(require(\"./reducer\").default);\n    });\n  }\n\n  return store;\n};","map":{"version":3,"sources":["/home/amin/Templates/todo-sample/redux/store.tsx"],"names":["createStore","applyMiddleware","compose","reducer","thunk","Api","makeStore","initialState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","withExtraArgument","module","hot","accept","console","log","replaceReducer","require","default"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,GAAP,MAAgB,QAAhB;AAEA,OAAO,MAAMC,SAAoB,GAAIC,YAAD,IAAkB;AACpD,QAAMC,gBAAgB,GACnB,SACEC,MAAD,CAAgBC,oCADlB,IAEAR,OAHF;AAKA,QAAMS,KAAK,GAAGX,WAAW,CACvBG,OADuB,EAEvBI,YAFuB,EAGvBC,gBAAgB,CAACP,eAAe,CAACG,KAAK,CAACQ,iBAAN,CAAwB;AAAEP,IAAAA;AAAF,GAAxB,CAAD,CAAhB,CAHO,CAAzB;;AAMA,MAAKQ,MAAD,CAAgBC,GAApB,EAAyB;AACtBD,IAAAA,MAAD,CAAgBC,GAAhB,CAAoBC,MAApB,CAA2B,WAA3B,EAAwC,MAAM;AAC5CC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAN,MAAAA,KAAK,CAACO,cAAN,CAAqBC,OAAO,CAAC,WAAD,CAAP,CAAqBC,OAA1C;AACD,KAHD;AAID;;AAED,SAAOT,KAAP;AACD,CApBM","sourcesContent":["import { createStore, applyMiddleware, compose } from \"redux\";\nimport { MakeStore } from \"next-redux-wrapper\";\nimport reducer from \"./reducer\";\nimport thunk from \"redux-thunk\";\nimport Api from \"../api\";\n\nexport const makeStore: MakeStore = (initialState) => {\n  const composeEnhancers =\n    (typeof window !== \"undefined\" &&\n      (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n    compose;\n\n  const store = createStore(\n    reducer,\n    initialState,\n    composeEnhancers(applyMiddleware(thunk.withExtraArgument({ Api })))\n  );\n\n  if ((module as any).hot) {\n    (module as any).hot.accept(\"./reducer\", () => {\n      console.log(\"Replacing reducer\");\n      store.replaceReducer(require(\"./reducer\").default);\n    });\n  }\n\n  return store;\n};\n"]},"metadata":{},"sourceType":"module"}