{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/amin/Templates/todo-sample/components/MainBox.tsx\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { primary } from \"../helpers/colors\";\nimport { fetchTasks } from \"../redux/actions/fetchTasks\";\nvar tabs = [\"All\", \"Todo\", \"Completed\"];\n\nvar MainBox = function MainBox(props) {\n  var empty = props.empty,\n      children = props.children,\n      renderEmpty = props.renderEmpty,\n      title = props.title,\n      renderBottom = props.renderBottom,\n      type = props.type;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state;\n  }),\n      todoList = _useSelector.todoList;\n\n  return __jsx(React.Fragment, null, __jsx(MainBoxContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, title), type === \"indexPage\" && __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, tabs.map(function (item, index) {\n    var key = \"todoListTabItem\".concat(index).concat(item);\n    return __jsx(\"li\", {\n      onClick: function onClick() {\n        return dispatch(fetchTasks(item));\n      },\n      key: key,\n      className: \"\".concat(item === todoList.type ? \"activeTabItem\" : \"\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }, item);\n  })), __jsx(\"div\", {\n    className: \"indexTodoBox\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, empty ? __jsx(React.Fragment, null, renderEmpty && renderEmpty(todoList.type)) : children), renderBottom && renderBottom()));\n};\n\nvar MainBoxContainer = styled.main(function () {\n  return {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n    minHeight: \"100vh\",\n    h1: {\n      fontSize: \"1.9rem\",\n      color: \"#333\",\n      padding: \"0 30px\",\n      marginTop: 30,\n      marginBottom: 10\n    },\n    ul: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      li: {\n        margin: \"0 10px\",\n        color: \"#333\",\n        cursor: \"pointer\"\n      },\n      \".activeTabItem\": {\n        color: primary,\n        fontWeight: \"bold\"\n      }\n    },\n    \".indexTodoBox\": {\n      background: \"#fff\",\n      padding: 30,\n      width: \"100%\",\n      maxWidth: 500,\n      margin: 30,\n      borderRadius: 4,\n      boxShadow: \"2px 2px 5px 1px #999\"\n    }\n  };\n});\nexport default MainBox;","map":{"version":3,"sources":["/home/amin/Templates/todo-sample/components/MainBox.tsx"],"names":["React","useSelector","useDispatch","styled","primary","fetchTasks","tabs","MainBox","props","empty","children","renderEmpty","title","renderBottom","type","dispatch","state","todoList","map","item","index","key","MainBoxContainer","main","display","alignItems","justifyContent","flexDirection","minHeight","h1","fontSize","color","padding","marginTop","marginBottom","ul","li","margin","cursor","fontWeight","background","width","maxWidth","borderRadius","boxShadow"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport styled from \"styled-components\";\nimport { primary } from \"../helpers/colors\";\nimport { fetchTasks } from \"../redux/actions/fetchTasks\";\n\nconst tabs = [\"All\", \"Todo\", \"Completed\"];\n\nconst MainBox = (props) => {\n  const { empty, children, renderEmpty, title, renderBottom, type } = props;\n\n  const dispatch = useDispatch();\n  const { todoList } = useSelector((state) => state);\n\n  return (\n    <>\n      <MainBoxContainer>\n        <h1>{title}</h1>\n        {type === \"indexPage\" && (\n          <ul>\n            {tabs.map((item, index) => {\n              const key = `todoListTabItem${index}${item}`;\n              return (\n                <li\n                  onClick={() => dispatch(fetchTasks(item))}\n                  key={key}\n                  className={`${item === todoList.type ? \"activeTabItem\" : \"\"}`}\n                >\n                  {item}\n                </li>\n              );\n            })}\n          </ul>\n        )}\n        <div className=\"indexTodoBox\">\n          {empty ? <>{renderEmpty && renderEmpty(todoList.type)}</> : children}\n        </div>\n        {renderBottom && renderBottom()}\n      </MainBoxContainer>\n    </>\n  );\n};\n\nconst MainBoxContainer = styled.main(() => {\n  return {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n    minHeight: \"100vh\",\n    h1: {\n      fontSize: \"1.9rem\",\n      color: \"#333\",\n      padding: \"0 30px\",\n      marginTop: 30,\n      marginBottom: 10,\n    },\n    ul: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      li: {\n        margin: \"0 10px\",\n        color: \"#333\",\n        cursor: \"pointer\",\n      },\n      \".activeTabItem\": {\n        color: primary,\n        fontWeight: \"bold\",\n      },\n    },\n    \".indexTodoBox\": {\n      background: \"#fff\",\n      padding: 30,\n      width: \"100%\",\n      maxWidth: 500,\n      margin: 30,\n      borderRadius: 4,\n      boxShadow: \"2px 2px 5px 1px #999\",\n    },\n  };\n});\n\nexport default MainBox;\n"]},"metadata":{},"sourceType":"module"}