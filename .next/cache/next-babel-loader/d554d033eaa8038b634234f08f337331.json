{"ast":null,"code":"import Router from \"next/router\";\nimport moment from \"jalali-moment\";\nexport const toPersian = function (val) {\n  if (val) {\n    const id = [\"۰\", \"۱\", \"۲\", \"۳\", \"۴\", \"۵\", \"۶\", \"۷\", \"۸\", \"۹\"];\n    return val.toString().replace(/[0-9]/g, function (w) {\n      return id[+w];\n    });\n  } else {\n    return val;\n  }\n};\nexport const moneyFormat = function (n, x) {\n  try {\n    const re = \"\\\\d(?=(\\\\d{\" + (x || 3) + \"})+\" + (n > 0 ? \"\\\\.\" : \"$\") + \")\";\n    return this.toFixed(Math.max(0, ~~n)).replace(new RegExp(re, \"g\"), \"$&,\");\n  } catch (e) {\n    return \"\";\n  }\n};\nexport const underLine = function () {\n  this.replace(\"/s/g\", \"_\");\n};\nexport const toEnglish = function (val) {\n  const find = [\"۰\", \"۱\", \"۲\", \"۳\", \"۴\", \"۵\", \"۶\", \"۷\", \"۸\", \"۹\"];\n  var replace = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"];\n  var replaceString = val;\n  var regex;\n\n  for (var i = 0; i < find.length; i++) {\n    regex = new RegExp(find[i], \"g\");\n    replaceString = replaceString.replace(regex, replace[i]);\n  }\n\n  return replaceString;\n};\nexport const remove = function () {\n  var what,\n      a = arguments,\n      L = a.length,\n      ax;\n\n  while (L && this.length) {\n    what = a[--L];\n\n    while ((ax = this.indexOf(what)) !== -1) {\n      this.splice(ax, 1);\n    }\n  }\n\n  return this;\n};\nexport function trunc(s, n) {\n  if (s) {\n    return s.length > n ? s.substr(0, n - 1) + \"...\" : s;\n  } else {\n    return \"\";\n  }\n}\nexport const setIfNumber = (e, setFieldValue, max) => {\n  if (!isNaN(Number(toEnglish(e.target.value)))) {\n    if (!max) {\n      setFieldValue(e.target.name, toEnglish(e.target.value));\n    } else {\n      if (e.target.value.length <= max) {\n        setFieldValue(e.target.name, toEnglish(e.target.value));\n      }\n    }\n  }\n};\nexport const setCookie = (cName, cValue, seconds) => {\n  let d = new Date();\n  let sec = seconds * 1000;\n  d.setTime(d.getTime() + sec);\n  let expires = `expires=${d.toUTCString()}`;\n  document.cookie = `${cName}=${cValue}; ${expires};path=/`;\n};\nexport const getCookie = cName => {\n  let name = `${cName}=`;\n  let decodedCookie = decodeURIComponent(document.cookie);\n  let ca = decodedCookie.split(\";\");\n\n  for (let i = 0; i < ca.length; i++) {\n    let c = ca[i];\n\n    while (c.charAt(0) == \" \") {\n      c = c.substring(1);\n    }\n\n    if (c.indexOf(name) == 0) {\n      return c.substring(name.length, c.length);\n    }\n  }\n\n  return \"\";\n};\nexport const checkProtected = async (ctx, callback) => {\n  const {\n    store,\n    res\n  } = ctx;\n  const {\n    auth\n  } = store.getState();\n\n  switch (auth.role) {\n    case \"user\":\n      if (callback) await callback();\n      break;\n\n    default:\n      if (res) {\n        res.writeHead(302, {\n          Location: \"/login\"\n        });\n        res.end();\n        res.finished = true;\n      } else {\n        Router.push(\"/login\");\n      }\n\n      break;\n  }\n};\nexport function daysRemaining(time) {\n  var eventdate = moment(time);\n  var todaysdate = moment();\n  return eventdate.diff(todaysdate, \"days\");\n}\nexport const checkPremiumDate = async (ctx, callback) => {\n  const {\n    store,\n    res\n  } = ctx;\n  const {\n    user\n  } = store.getState();\n  const {\n    premium_date\n  } = user.item; // const testDate = \"2020-08-17T07:59:48.365000\";\n\n  const redirect = () => {\n    if (res) {\n      res.writeHead(302, {\n        Location: \"/packages\"\n      });\n      res.end();\n      res.finished = true;\n    } else {\n      Router.push(\"/packages\");\n    }\n  };\n\n  if (premium_date) {\n    if (daysRemaining(premium_date) < 0) {\n      redirect();\n    } else {\n      if (callback) await callback();\n    }\n  } else {\n    redirect();\n  }\n};\nexport const daysLeft = date => {\n  var now = moment();\n  return now.diff(date, \"days\");\n};\nexport function deleteCookie(name) {\n  document.cookie = name + \"=; expires=Thu, 01 Jan 1970 00:00:01 GMT;\";\n}\nexport function uniq_id() {\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0,\n        v = c == \"x\" ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n}","map":null,"metadata":{},"sourceType":"module"}